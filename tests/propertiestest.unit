
#include <lpmd/simulation.h>
#include <lpmd/simulationbuilder.h>
#include <lpmd/properties.h>
#include <lpmd/cellmanager.h>
#include <lpmd/error.h>
#include <lpmd/cell.h>

@testsuite Tests de Properties

using namespace lpmd;

@test Energia cinetica
{
 Simulation & s = SimulationBuilder::CreateGeneric(108, Atom("Ar"));
 BasicParticleSet & atoms = s.Atoms();
 double v0 = 0.0017669141;  // angstrom/fs
 for (int i=0;i<108;++i) atoms[i].Velocity() = v0*e1;
 @approx KineticEnergy(atoms), 0.69800472, 1.0E-5
}
@end

@test Energia Cinetica con fixedpos y fixedvel
{
 Simulation & s = SimulationBuilder::CreateGeneric(1, Atom("Ar"));
 BasicParticleSet & atoms = s.Atoms();
 atoms.Clear();
 Vector v1(1,1,1);
 Vector v2(0.5,0.5,0.5);
 Vector v3(2,2,2);
 Vector v4(4,4,4);
 atoms.Append(Atom("H",v1,v1,v1));
 atoms.Append(Atom("H",v2,v2,v2));
 atoms.Append(Atom("H",v3,v3,v3));
 atoms.Append(Atom("H",v4,v4,v4));
 double kin = 0.0e0;
 for (int i=0;i<atoms.Size();++i) kin += 0.5*(atoms[i].Mass()*atoms[i].Velocity().SquareModule());
 kin = kin*KIN2EV;
 @approx KineticEnergy(atoms), kin, 1.0E-5
 kin = 0.0e0;
 atoms.SetTag(atoms[0], Tag("fixedvel"), true);
 for (int i=1;i<atoms.Size();++i) kin += 0.5*(atoms[i].Mass()*atoms[i].Velocity().SquareModule());
 @approx KineticEnergy(atoms,(atoms.HaveAny(Tag("fixedvel")) || atoms.HaveAny(Tag("fixedpos")))), kin*KIN2EV, 1.0E-5
 atoms.SetTag(atoms[0], Tag("fixedpos"),true);
 @approx KineticEnergy(atoms,(atoms.HaveAny(Tag("fixedvel")) || atoms.HaveAny(Tag("fixedpos")))), kin*KIN2EV, 1.0E-5
 atoms.SetTag(atoms[1], Tag("fixedpos"),true);
 kin=0.0e0;
 for (int i=2;i<atoms.Size();++i) kin += 0.5*(atoms[i].Mass()*atoms[i].Velocity().SquareModule());
 @approx KineticEnergy(atoms,(atoms.HaveAny(Tag("fixedvel")) || atoms.HaveAny(Tag("fixedpos")))), kin*KIN2EV, 1.0E-5
}
@end

@test Temperatura
{
 Simulation & s = SimulationBuilder::CreateGeneric(108, Atom("Ar"));
 BasicParticleSet & atoms = s.Atoms();
 double v0 = 0.0017669141;  // angstrom/fs
 for (int i=0;i<108;++i) atoms[i].Velocity() = v0*e1;
 @approx Temperature(atoms), 50.0, 1.0E-05
}
@end

@test Temperatura con fixedpos y fixedvel
{
 Simulation & s = SimulationBuilder::CreateGeneric(108, Atom("Ar"));
 BasicParticleSet & atoms = s.Atoms();
 Vector v1(1,1,1),v2(2,2,2),v3(3,3,3),v4(4,4,4);
 atoms.Append(Atom("H",v1,v1,v1));
 atoms.Append(Atom("H",v2,v2,v2));
 atoms.Append(Atom("H",v3,v3,v3));
 atoms.Append(Atom("H",v4,v4,v4));

}
@end

@test Virial es cero al crearse la Simulation
{
 Simulation  & s = SimulationBuilder::CreateGeneric(108, Atom("Ar"));
 @approx s.Virial(), 0.0, 1.0E-10
}
@end

@test Tests de AddToVirial()
{
 Simulation & s = SimulationBuilder::CreateGeneric(108, Atom("Ar"));
 s.Virial() += 5.0;
 @approx s.Virial(), 5.0, 1.0E-10
 s.Virial() += 2.0;
 @approx s.Virial(), 7.0, 1.0E-10
}
@end

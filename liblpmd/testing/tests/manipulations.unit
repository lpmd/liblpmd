//
//
//

#include <lpmd/manipulations.h>
#include <lpmd/particleset.h>
#include <lpmd/cell.h>

using namespace lpmd;

@testsuite Tests de manipulations.h

@test UnCenter
{
 ParticleSet part;
 Cell cell;
 Vector a(0.5,0.5,0.5);
 Vector b(-0.5,-0.5,-0.5);
 Vector c(-0.5,-0.5,0.5);
 Vector d(-0.5,0.5,-0.5);
 part.Append(Atom("H",a));
 part.Append(Atom("H",b));
 part.Append(Atom("H",c));
 part.Append(Atom("H",d));
 cell[0] = Vector(1,0,0);
 cell[1] = Vector(0,1,0);
 cell[2] = Vector(0,0,1);
 UnCenter(part, cell);
 @approx (part[0].Position()-Vector(1,1,1)).Module(), 0.0, 1E-10
 @approx (part[1].Position()-Vector(0,0,0)).Module(), 0.0, 1E-10
 @approx (part[2].Position()-Vector(0,0,1)).Module(), 0.0, 1E-10
 @approx (part[3].Position()-Vector(0,1,0)).Module(), 0.0, 1E-10
}
@end

@test CenterByCenterOfMass
{
 ParticleSet part;
 Cell cell;
 Vector a(0.5,0.5,0.5);
 Vector b(0.75,0.75,0.75);
 part.Append(Atom("H",a));
 part.Append(Atom("Cu",b));
 cell[0] = e1;
 cell[1] = e2;
 cell[2] = e3;
 Vector cm(0.74610,0.74610,0.74610);
 CenterByCenterOfMass(part,cell);
 Vector anew = a - cm;
 Vector bnew = b - cm;
 @approx (part[0].Position() - anew).Module(), 0.0, 1E-10
 @approx (part[1].Position() - bnew).Module(), 0.0, 1E-10
}
@end

@test UndoPeriodicity
{
 ParticleSet part;
 Cell cell;
 Vector a(0.95,0.95,0.95);
 Vector b(0.05,0.05,0.05);
 @assert false
}
@end
